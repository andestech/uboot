// SPDX-License-Identifier: GPL-2.0+
/*
 * Copyright (C) 2023 Andes Technology Corporation
 */

#ifndef _ASM_ANDES_CSR_H
#define _ASM_ANDES_CSR_H

#define CSR_MCACHE_CTL	0x7ca
#define CSR_MCCTLCOMMAND 0x7cc
#define CSR_MMISC_CTL 0x7d0
#define CSR_MICM_CFG 0xfc0
#define CSR_MDCM_CFG 0xfc1
#define CSR_MMSC_CFG 0xfc2

/* MMSC configuration register */
#define V5_MMSC_CFG_TLB_ECC_OFFSET_1			1
#define V5_MMSC_CFG_TLB_ECC_OFFSET_2			2

#define V5_MMSC_CFG_TLB_ECC_1					BIT(V5_MMSC_CFG_TLB_ECC_OFFSET_1)
#define V5_MMSC_CFG_TLB_ECC_2					BIT(V5_MMSC_CFG_TLB_ECC_OFFSET_2)

/* MICM configuration regiser */
#define V5_MICM_CFG_IC_ECC_OFFSET_1				10
#define V5_MICM_CFG_IC_ECC_OFFSET_2				11

#define V5_MICM_CFG_IC_ECC_1					BIT(V5_MICM_CFG_IC_ECC_OFFSET_1)
#define V5_MICM_CFG_IC_ECC_2					BIT(V5_MICM_CFG_IC_ECC_OFFSET_2)

/* MDCM configuration regiser */
#define V5_MDCM_CFG_DC_ECC_OFFSET_1				10
#define V5_MDCM_CFG_DC_ECC_OFFSET_2				11

#define V5_MDCM_CFG_DC_ECC_1					BIT(V5_MDCM_CFG_DC_ECC_OFFSET_1)
#define V5_MDCM_CFG_DC_ECC_2					BIT(V5_MDCM_CFG_DC_ECC_OFFSET_2)

/* MMISC control register */
#define V5_MMISC_CTL_NON_BLOCKING_OFFSET		8
#define V5_MMISC_CTL_NON_BLOCKING_EN			BIT(V5_MMISC_CTL_NON_BLOCKING_OFFSET)

/* MCACHE control register */
#define V5_MCACHE_CTL_IC_EN_OFFSET				0
#define V5_MCACHE_CTL_DC_EN_OFFSET				1
#define V5_MCACHE_CTL_IC_ECCEN_OFFSET_1			2
#define V5_MCACHE_CTL_IC_ECCEN_OFFSET_2			3
#define V5_MCACHE_CTL_DC_ECCEN_OFFSET_1			4
#define V5_MCACHE_CTL_DC_ECCEN_OFFSET_2			5
#define V5_MCACHE_CTL_CCTL_SUEN_OFFSET			8
#define V5_MCACHE_CTL_L1I_PREFETCH_OFFSET		9
#define V5_MCACHE_CTL_L1D_PREFETCH_OFFSET		10
#define V5_MCACHE_CTL_DC_WAROUND_OFFSET_1		13
#define V5_MCACHE_CTL_DC_WAROUND_OFFSET_2		14
#define V5_MCACHE_CTL_L2C_WAROUND_OFFSET_1		15
#define V5_MCACHE_CTL_L2C_WAROUND_OFFSET_2		16
#define V5_MCACHE_CTL_TLB_ECCEN_OFFSET_1		17
#define V5_MCACHE_CTL_TLB_ECCEN_OFFSET_2		18
#define V5_MCACHE_CTL_DC_COHEN_OFFSET			19
#define V5_MCACHE_CTL_DC_COHSTA_OFFSET			20

#define V5_MCACHE_CTL_IC_EN						BIT(V5_MCACHE_CTL_IC_EN_OFFSET)
#define V5_MCACHE_CTL_DC_EN						BIT(V5_MCACHE_CTL_DC_EN_OFFSET)
#define V5_MCACHE_CTL_IC_ECCEN_1				BIT(V5_MCACHE_CTL_IC_ECCEN_OFFSET_1)
#define V5_MCACHE_CTL_IC_ECCEN_2				BIT(V5_MCACHE_CTL_IC_ECCEN_OFFSET_2)
#define V5_MCACHE_CTL_DC_ECCEN_1				BIT(V5_MCACHE_CTL_DC_ECCEN_OFFSET_1)
#define V5_MCACHE_CTL_DC_ECCEN_2				BIT(V5_MCACHE_CTL_DC_ECCEN_OFFSET_2)
#define V5_MCACHE_CTL_CCTL_SUEN					BIT(V5_MCACHE_CTL_CCTL_SUEN_OFFSET)
#define V5_MCACHE_CTL_L1I_PREFETCH_EN			BIT(V5_MCACHE_CTL_L1I_PREFETCH_OFFSET)
#define V5_MCACHE_CTL_L1D_PREFETCH_EN			BIT(V5_MCACHE_CTL_L1D_PREFETCH_OFFSET)
#define V5_MCACHE_CTL_DC_WAROUND_1_EN			BIT(V5_MCACHE_CTL_DC_WAROUND_OFFSET_1)
#define V5_MCACHE_CTL_DC_WAROUND_2_EN			BIT(V5_MCACHE_CTL_DC_WAROUND_OFFSET_2)
#define V5_MCACHE_CTL_L2C_WAROUND_1_EN			BIT(V5_MCACHE_CTL_L2C_WAROUND_OFFSET_1)
#define V5_MCACHE_CTL_L2C_WAROUND_2_EN			BIT(V5_MCACHE_CTL_L2C_WAROUND_OFFSET_2)
#define V5_MCACHE_CTL_TLB_ECCEN_1				BIT(V5_MCACHE_CTL_TLB_ECCEN_OFFSET_1)
#define V5_MCACHE_CTL_TLB_ECCEN_2				BIT(V5_MCACHE_CTL_TLB_ECCEN_OFFSET_2)
#define V5_MCACHE_CTL_DC_COHEN_EN				BIT(V5_MCACHE_CTL_DC_COHEN_OFFSET)
#define V5_MCACHE_CTL_DC_COHSTA_EN				BIT(V5_MCACHE_CTL_DC_COHSTA_OFFSET)

/* CCTL command */
#define CCTL_L1D_WBINVAL_ALL    6

#endif /* _ASM_ANDES_CSR_H */
